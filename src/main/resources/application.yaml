server:
  port: 8082

spring:
  application:
    name: delivery
  main:
    banner-mode: off

  datasource:
    driver-class-name: org.postgresql.Driver
    url: "jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_DATABASE:delivery}"
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:12345}

  flyway:
    baseline-version: 1
    baseline-on-migrate: ${FLYWAY_MIGRATE:false}
    enabled: ${FLYWAY_ENABLED:false}

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: ${SHOW_SQL:true}
        format_sql: true
    open-in-view: false

  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost:9092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP:basket-group}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

logging:
  level:
    root: INFO
    org.zalando.logbook: TRACE

app:
  grpc:
    geo-service:
      host: ${GEO_SERVICE_GRPC_HOST:0.0.0.0}
      port: ${GEO_SERVICE_GRPC_PORT:5004}
  kafka:
    basket-events-topic: ${KAFKA_BASKETS_EVENTS_TOPIC:baskets.events}
    orders-events-topic: ${KAFKA_ORDERS_EVENTS_TOPIC:orders.events}
